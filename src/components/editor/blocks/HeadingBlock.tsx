
{
  "content": "// ABOUTME: Editor component for heading blocks.\nimport React from 'react';\nimport { ReviewBlock } from '@/types/review';\nimport { ContentEditable } from '@/components/editor/common/ContentEditable';\n\nexport interface HeadingBlockProps {\n  block: ReviewBlock;\n  onUpdate: (blockId: string, updates: Partial<ReviewBlock>) => void;\n  readonly?: boolean;\n  content: { text?: string; level?: 1 | 2 | 3 | 4 | 5 | 6 };\n  onUpdateContent: (newContent: { text: string; level?: 1 | 2 | 3 | 4 | 5 | 6 }) => void;\n}\n\nexport const HeadingBlock: React.FC<HeadingBlockProps> = ({ block, content, onUpdateContent, readonly }) => {\n  const currentText = content?.text || '';\n  const level = content?.level || 2;\n\n  const handleChange = (newText: string) => {\n    onUpdateContent({ text: newText, level });\n  };\n\n  const Tag = `h${level}` as keyof JSX.IntrinsicElements;\n\n  if (readonly) {\n    return <Tag dangerouslySetInnerHTML={{ __html: currentText }} className={`font-bold prose prose-sm dark:prose-invert max-w-none`} />;\n  }\n\n  return (\n    <ContentEditable\n      html={currentText}\n      onChange={(e) => handleChange(e.target.value)}\n      tagName={Tag}\n      className=\"p-1 focus:outline-none focus:ring-1 focus:ring-blue-500 rounded font-bold min-h-[24px] prose prose-sm dark:prose-invert max-w-none\"\n      placeholder=\"Digite o tÃ­tulo...\"\n    />\n  );\n};\n"
}
