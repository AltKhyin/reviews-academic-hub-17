
{
  "content": "// ABOUTME: Editor component for table blocks.\nimport React from 'react';\nimport { ReviewBlock } from '@/types/review';\n// For a full table editor, a library or more complex state management would be needed.\n// This is a very basic placeholder.\n\nexport interface TableBlockProps {\n  block: ReviewBlock;\n  onUpdate: (blockId: string, updates: Partial<ReviewBlock>) => void;\n  readonly?: boolean;\n  content: { title?: string; html?: string }; // Simplified: assumes HTML content for table\n  onUpdateContent: (newContent: { title?: string; html?: string }) => void;\n}\n\nexport const TableBlock: React.FC<TableBlockProps> = ({ block, content, onUpdateContent, readonly }) => {\n  const { title = 'Tabela', html = '<table><tr><td>Conteúdo da Tabela Aqui</td></tr></table>' } = content || {};\n\n  // Basic handler, would need more for actual table cell editing\n  const handleTitleChange = (newTitle: string) => {\n    onUpdateContent({ ...content, title: newTitle });\n  };\n\n  if (readonly) {\n    return (\n      <div className=\"my-2\">\n        {title && <h4 className=\"font-semibold text-center mb-1 text-white\">{title}</h4>}\n        <div className=\"overflow-x-auto prose prose-sm dark:prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-2 border border-gray-700 rounded bg-gray-850\">\n      <input \n        type=\"text\" \n        value={title} \n        onChange={(e) => handleTitleChange(e.target.value)} \n        className=\"w-full p-1 mb-2 bg-gray-800 border-gray-600 rounded text-white placeholder-gray-500 text-sm\"\n        placeholder=\"Título da Tabela\"\n      />\n      <p className=\"text-xs text-gray-400\">Edição de tabela complexa não implementada. Pré-visualização:</p>\n      <div className=\"mt-1 overflow-x-auto prose prose-sm dark:prose-invert max-w-none border border-dashed border-gray-600 p-1 rounded\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n};\n"
}
