
{
  "content": "// ABOUTME: Editor component for citation list blocks.\nimport React from 'react';\nimport { ReviewBlock } from '@/types/review';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\n\nexport interface CitationItem {\n  id: string;\n  text: string; // Full citation text\n}\n\nexport interface CitationListBlockProps {\n  block: ReviewBlock;\n  onUpdate: (blockId: string, updates: Partial<ReviewBlock>) => void;\n  readonly?: boolean;\n  content: { items?: CitationItem[] }; // Storing as an array of strings for simplicity\n  onUpdateContent: (newContent: { items?: CitationItem[] }) => void;\n}\n\nexport const CitationListBlock: React.FC<CitationListBlockProps> = ({ block, content, onUpdateContent, readonly }) => {\n  // For simplicity, store citations as a single string, each on a new line.\n  // A more robust solution would use an array of objects for citations.\n  const citationsText = content?.items?.map(item => item.text).join('\\n') || '';\n\n  const handleChange = (fullText: string) => {\n    const newItems: CitationItem[] = fullText.split('\\n').map((text, index) => ({\n      id: content?.items?.[index]?.id || `cit-${Date.now()}-${index}`,\n      text\n    }));\n    onUpdateContent({ items: newItems });\n  };\n\n  if (readonly) {\n    return (\n      <div className=\"my-2 prose prose-sm dark:prose-invert max-w-none\">\n        <h4 className=\"font-semibold text-gray-300\">Referências</h4>\n        {content?.items && content.items.length > 0 ? (\n          <ol className=\"list-decimal list-inside pl-0 space-y-1 text-gray-400\">\n            {content.items.map((item) => (\n              <li key={item.id} className=\"text-xs leading-relaxed\">{item.text}</li>\n            ))}\n          </ol>\n        ) : (\n          <p className=\"text-xs text-gray-500 italic\">Nenhuma citação fornecida.</p>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-2 border border-gray-700 rounded bg-gray-850\">\n      <Label htmlFor={`citations-${block.id}`} className=\"text-xs text-gray-400 mb-1 block\">Lista de Citações (uma por linha)</Label>\n      <Textarea \n        id={`citations-${block.id}`} \n        value={citationsText} \n        onChange={(e) => handleChange(e.target.value)} \n        placeholder=\"1. Autor A. Título do Artigo. Journal. Ano;Vol(Issue):Pages.\\n2. Autor B. Outro Título. Conference. Ano.\"\n        className=\"bg-gray-800 border-gray-600 text-white text-xs min-h-[100px] leading-relaxed\"\n        rows={5}\n      />\n    </div>\n  );\n};\n"
}
